# GitHub Actions workflow for Code Golf Visualizer
# Deploys to Cloudflare Pages

name: 🚀 Deploy to Cloudflare Pages

on:
  # Trigger on push to master branch
  push:
    branches: [master]
  
  # Trigger on pull requests to master
  pull_request:
    branches: [master]
  
  # Allow manual trigger from GitHub UI
  workflow_dispatch:

# Set permissions for GitHub token
permissions:
  contents: read
  deployments: write
  statuses: write
  pull-requests: write

# Environment variables
env:
  NODE_VERSION: '18'

jobs:
  # Build job - compile and optimize the application
  build:
    name: 🔨 Build Application
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: 📋 Install dependencies
        run: npm ci
      
      - name: 🔨 Build for production
        run: npm run build:deploy
      
      - name: 📊 Display build info
        run: |
          echo "Build completed successfully!"
          echo "Build artifacts:"
          ls -la dist/
          echo "Total size:"
          du -sh dist/
      
      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
          retention-days: 1

  # Deploy to Cloudflare Pages
  deploy:
    name: 🌐 Deploy to Cloudflare Pages
    runs-on: ubuntu-latest
    needs: build
    # Only deploy on master branch pushes (not PRs)
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    
    environment:
      name: production
      url: ${{ steps.deploy.outputs.url }}
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 📥 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: dist/
      
      - name: 🚀 Deploy to Cloudflare Pages
        id: deploy
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ vars.CLOUDFLARE_PROJECT_NAME }}
          directory: dist/
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
      
      - name: ✅ Deployment summary
        run: |
          echo "🎉 Deployment completed successfully!"
          echo "🔗 Site URL: ${{ steps.deploy.outputs.url }}"
          echo "📊 Deployment ID: ${{ steps.deploy.outputs.id }}"

  # Deploy preview for pull requests
  deploy-preview:
    name: 🔍 Deploy Preview
    runs-on: ubuntu-latest
    needs: build
    # Only deploy previews for pull requests
    if: github.event_name == 'pull_request'
    
    environment:
      name: preview
      url: ${{ steps.deploy.outputs.url }}
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 📥 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: dist/
      
      - name: 🔍 Deploy preview to Cloudflare Pages
        id: deploy
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ vars.CLOUDFLARE_PROJECT_NAME }}
          directory: dist/
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 💬 Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('🔍 Preview Deployment')
            );
            
            const commentBody = `## 🔍 Preview Deployment
            
            ✅ **Deployment successful!**
            
            🔗 **Preview URL:** ${{ steps.deploy.outputs.url }}
            📊 **Deployment ID:** ${{ steps.deploy.outputs.id }}
            
            ---
            
            This preview will be automatically updated when you push new commits to this PR.`;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: commentBody
              });
            }
